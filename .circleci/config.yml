version: 2.1

orbs:
  slack: circleci/slack@4.10.1
  aws-ecr: circleci/aws-ecr@8.1.2
  aws-ecs: circleci/aws-ecs@2.2.1
  terraform: circleci/terraform@3.1.0

commands:
  notify_slack_pass:
    steps:
      - slack/notify:
          event: pass
          template: basic_success_1
  notify_slack_error:
    steps:
      - slack/notify:
          event: fail
          template: basic_fail_1
jobs:
  create_tf_backend_bucket:
    executor: aws-cli/default
    steps:
      - aws-cli/setup
      - run: >-
          aws s3api create-bucket
          --bucket fastapi-ecs-fargate
          --region $AWS_DEFAULT_REGION
          --acl private
  build-and-push-image:
    working_directory: ~/davinci
    docker:
      - image: cimg/python:3.10.4
    steps:
      - setup_remote_docker:
          version: 20.10.12
      - aws-ecr/build-and-push-image:
          repo: "${TF_VAR_AWS_RESOURCE_NAME_PREFIX}-registry"
          region: ${AWS_DEFAULT_REGION}
          tag: "${CIRCLE_SHA1}" # TO-DO: check how to add latest

workflows:
  build-and-deploy:
    jobs:
      - terraform/fmt:
          checkout: true
          path: terraform
          filters:
            branches:
              only: [ main ]
      - terraform/validate:
          checkout: true
          path: terraform
          filters:
            branches:
              only: [ main ]
          requires:
            - terraform/fmt
          context:
            - fastapi-ecs-fargate-context
      - terraform/plan:
          checkout: true
          path: terraform
          persist-workspace: true
          filters:
            branches:
              only: [ main ]
          requires:
            - terraform/validate
          context:
            - fastapi-ecs-fargate-context
      - hold-tf-apply:
          type: approval
          requires:
            - terraform/plan
      - terraform/apply:
          path: terraform
          attach-workspace: true
          filters:
            branches:
              only: [ main ]
          requires:
            - hold-tf-apply
          context:
            - fastapi-ecs-fargate-context
      - build-and-push-image:
          context:
            - fastapi-ecs-fargate-context
          filters:
            branches:
              only: [ main ]
          requires:
            - terraform/apply
      - aws-ecs/deploy-service-update:
          cluster-name: "${TF_VAR_AWS_RESOURCE_NAME_PREFIX}" # The short name or full ARN of the cluster that hosts the service.
          container-image-name-updates: "container=${TF_VAR_AWS_RESOURCE_NAME_PREFIX}-container,tag=${CIRCLE_SHA1}"
          family: "${TF_VAR_AWS_RESOURCE_NAME_PREFIX}-td" # Name of the task definition's family.
          service-name: "${TF_VAR_AWS_RESOURCE_NAME_PREFIX}-service"
          context:
            - fastapi-ecs-fargate-context
          filters:
            branches:
              only: [ main ]
          requires:
            - build-and-push-image
